set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim

" powerline
set rtp+=/usr/lib/python3.5/site-packages/powerline/bindings/vim/
set t_Co=256
" always show status line
set laststatus=2

call vundle#begin()
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'tpope/vim-fugitive'
Plugin 'Yggdroot/indentLine'
Plugin 'Raimondi/delimitMate'
Plugin 'scrooloose/nerdtree'
Plugin 'rhysd/vim-clang-format'
Plugin 'jeaye/color_coded'
Plugin 'benmills/vimux'
Plugin 'osyo-manga/vim-marching'
call vundle#end()

let g:UltiSnipsExpandTrigger="<c-p>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

let g:indentLine_color_term = 239
let g:indentLine_color_gui = '#09AA08'
let g:indentLine_char = 'â”‚'

let g:clang_library_path='/usr/lib64/libclang.so.3.8'

let mapleader=';'

nmap <leader>d :NERDTreeToggle<CR>
" vertical & horizontal split
nmap <leader>/ <C-w>v
nmap <leader>- <C-w>s
nmap <leader>w <C-w>w
" fuzzy find file quickly
nmap <leader>f :find 
" save file quickly
nmap <leader>q :wq<cr>
nmap <leader><leader> :w<cr>
" ...even without right permissions...
nmap <leader>s :w !sudo tee %<cr>
" C/C++: run make
nmap <leader>m :make<cr>

filetype plugin indent on
set autoindent

if has("vms")
 set nobackup
else
 set backup
endif

set path+=**
set wildmenu

command MakeTags !ctags -R .

set history=50
set ruler
set showcmd
" show relative line numbers
set nu
set relativenumber

set foldmethod=marker
set foldmarker='{{{,}}}'
syntax on
colorscheme Crystallite
if has('gui_running')
 set guifont=Source\ Code\ Pro\ Medium\ 16
endif

nmap <C-S-P> :call <SID>SynStack()<CR>
function! <SID>SynStack()
 if exists("*synstack")
  echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
 endif
endfunc
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
set exrc
set secure

" get rid of swp and backup files
set nobackup
set noswapfile
set nowritebackup
